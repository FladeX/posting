<?php

/**
 * projectsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class projectsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object projectsTable
     */
  static public function getLuceneIndex()
  {
	ProjectConfiguration::registerZend();

	if (file_exists($index = self::getLuceneIndexFile()))
	{
		return Zend_Search_Lucene::open($index);
	}
	else
	{
		return Zend_Search_Lucene::create($index);
	}
  }

  static public function getLuceneIndexFile()
  {
	return sfConfig::get('sf_data_dir').'/projects.'.sfConfig::get('sf_environment').'.index';
	//return sfConfig::get('sf_data_dir').'/projects.'.sfConfig::get('sf_environment').'.index';
  }

  public function getForLuceneQuery($query)
  {
	$hits = self::getLuceneIndex()->find($query);

	$pks = array();
	foreach ($hits as $hit) {
		$pks[] = $hit->pk;
	}

	if (empty($pks)) {
		return array();
	}

	$q = $this->createQuery('p')
		->whereIn('p.id', $pks)
		->limit(7);

	$q = $this->addActiveProjectsQuery($q);

	return $q->execute();
  }

  public function retrieveActiveProjects(Doctrine_Query $q)
  {
	return $this->addActiveProjectsQuery($q)->fetchOne();
  }

  public function getActiveProjects(Doctrine_Query $q = null)
  {
	return $this->addActiveProjectsQuery($q)->execute();
  }

  public function getActiveProjectsQuery()
  {
	$q = Doctrine_Query::create()
		->from('projects p')
		->where('p.status <> 0', $this->getId());
 
	return Doctrine_Core::getTable('projects')->addActiveProjectsQuery($q);
  }
 
  public function countActiveProjects(Doctrine_Query $q = null)
  {
	return $this->addActiveProjectsQuery($q)->count();
  }
 
  public function addActiveProjectsQuery(Doctrine_Query $q = null)
  {
	if (is_null($q))
	{
		$q = Doctrine_Query::create()
			->from('projects p');
	}
 
	$alias = $q->getRootAlias();
 
	$q->andWhere($alias . '.expired_at > ?', date('Y-m-d h:i:s', time()))
		->addOrderBy($alias . '.expired_at DESC');
 
	return $q;
  }

  public function getLatestProjects() // for RSS
  {
	$q = Doctrine_Query::create()
		->from('projects p');
	$this->addActiveProjectsQuery($q);

	return $q->fetchOne();
  }
}