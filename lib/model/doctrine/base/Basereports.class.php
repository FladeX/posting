<?php

/**
 * Basereports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $project_id
 * @property string $posting_name
 * @property string $posting_password
 * @property integer $posting_messages
 * @property timestamp $posting_date
 * @property integer $status
 * @property projects $projects
 * @property users $users
 * 
 * @method integer   getUserId()           Returns the current record's "user_id" value
 * @method integer   getProjectId()        Returns the current record's "project_id" value
 * @method string    getPostingName()      Returns the current record's "posting_name" value
 * @method string    getPostingPassword()  Returns the current record's "posting_password" value
 * @method integer   getPostingMessages()  Returns the current record's "posting_messages" value
 * @method timestamp getPostingDate()      Returns the current record's "posting_date" value
 * @method integer   getStatus()           Returns the current record's "status" value
 * @method projects  getProjects()         Returns the current record's "projects" value
 * @method users     getUsers()            Returns the current record's "users" value
 * @method reports   setUserId()           Sets the current record's "user_id" value
 * @method reports   setProjectId()        Sets the current record's "project_id" value
 * @method reports   setPostingName()      Sets the current record's "posting_name" value
 * @method reports   setPostingPassword()  Sets the current record's "posting_password" value
 * @method reports   setPostingMessages()  Sets the current record's "posting_messages" value
 * @method reports   setPostingDate()      Sets the current record's "posting_date" value
 * @method reports   setStatus()           Sets the current record's "status" value
 * @method reports   setProjects()         Sets the current record's "projects" value
 * @method reports   setUsers()            Sets the current record's "users" value
 * 
 * @package    posting
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basereports extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reports');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('posting_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('posting_password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('posting_messages', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('posting_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('projects', array(
             'local' => 'project_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('users', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}