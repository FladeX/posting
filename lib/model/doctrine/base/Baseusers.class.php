<?php

/**
 * Baseusers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $user_name
 * @property string $user_email
 * @property integer $user_status
 * @property Doctrine_Collection $users
 * 
 * @method string              getUserName()    Returns the current record's "user_name" value
 * @method string              getUserEmail()   Returns the current record's "user_email" value
 * @method integer             getUserStatus()  Returns the current record's "user_status" value
 * @method Doctrine_Collection getUsers()       Returns the current record's "users" collection
 * @method users               setUserName()    Sets the current record's "user_name" value
 * @method users               setUserEmail()   Sets the current record's "user_email" value
 * @method users               setUserStatus()  Sets the current record's "user_status" value
 * @method users               setUsers()       Sets the current record's "users" collection
 * 
 * @package    posting
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseusers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('user_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('login_history as users', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}